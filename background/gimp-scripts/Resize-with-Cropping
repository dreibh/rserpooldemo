#!/bin/bash -e
#
# Image Best-Fit (resize with cropping, keeping aspect ratio)
# Copyright (C) 2012-2019 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no
#


# ###### Handle arguments ###################################################
if [ $# -lt 3 ] ; then
   echo >&2 "Usage: $0 input output aspect|H:V|HxV|An [new_width]"
   exit 1
fi

inputFileName="$1"
outputFileName="$2"

aspectArg="$3"
outputAspect=1
if [[ "$aspectArg" =~ ^([0-9]+\.{0,1}[0-9]*)([:x])([0-9]+\.{0,1}[0-9]*)$ ]] ; then
   outputAspect=`echo "${BASH_REMATCH[1]}/${BASH_REMATCH[3]}" | bc -l`
else
   if [[ "$aspectArg" =~ ^([0-9]+\.{0,1}[0-9]*)$ ]] ; then
      outputAspect="${BASH_REMATCH[1]}"
   else
      if [[ "$aspectArg" =~ ^[Aa][0-9]$ ]] ; then
         outputAspect="1.414213562373"   # DIN A<n> is sqrt(2):1 in landscape format
      else
         echo >&2 "ERROR: Bad aspect specification: $aspectArg!"
         exit 1
      fi
   fi
fi

newWidth=
if [ $# -ge 4 ] ; then
   newWidth="$4"
   newHeight=0`echo "(${newWidth}/${outputAspect})+0.5" | bc -l | sed -e "s/\.[0-9]*$//"`
fi


# ###### Load image #########################################################
inputImageSize=`identify -format "%wx%h" "$inputFileName"`
inputWidth=`echo "$inputImageSize" | sed -e "s/x[0-9]*$//"`
inputHeight=`echo "$inputImageSize" | sed -e "s/^[0-9]*x//"`
inputAspect=`echo "${inputWidth}/${inputHeight}" | bc -l`
if [[ "$inputAspect" =~ ^- ]] ; then
   inputAspect=`echo "1/${inputAspect}" | bc -l`   # Input image is in portrait format => convert aspect
fi
echo "Input: ${inputWidth}*${inputHeight} (${inputAspect})"


# ###### Crop image #########################################################
if [[ "`echo "${inputAspect}-${outputAspect}" | bc -l`" =~ ^- ]] ; then   # inputAspect < outputAspect
   croppedInputWidth=${inputWidth}
   croppedInputHeight=`echo "(${croppedInputWidth}/${outputAspect})+0.5" | bc -l | sed -e "s/\.[0-9]*$//" -e "s/^$/0/"`
else
   croppedInputHeight=${inputHeight}
   croppedInputWidth=`echo "(${inputHeight}*${outputAspect})+0.5" | bc -l | sed -e "s/\.[0-9]*$//" -e "s/^$/0/"`
fi
cx=`echo "(${inputWidth}-${croppedInputWidth})/2+0.5" |  bc -l | sed -e "s/\.[0-9]*$//" -e "s/^$/0/"`
cy=`echo "(${inputHeight}-${croppedInputHeight})/2+0.5" | bc -l | sed -e "s/\.[0-9]*$//" -e "s/^$/0/"`
echo "Crop: ${croppedInputWidth}*${croppedInputHeight} [cx=${cx} cy=${cy}] (${outputAspect}:1)"


# ###### Resize image #######################################################
if [ "$newWidth" != "" ] ; then
   echo "Resize: ${newWidth}*${newHeight} + (${outputAspect}:1)"
fi


# ###### Run "convert" ######################################################
rm -f "$outputFileName"
convert "$inputFileName" \
   -crop ${croppedInputWidth}x${croppedInputHeight}+${cx}+${cy} \
   -resize ${newWidth}x${newHeight} \
   "$outputFileName"

echo "Done!"

# identify "$outputFileName"
